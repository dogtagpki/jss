# Core of JSS building

macro(jss_build)
    # Build JSS
    file(GLOB_RECURSE JAVA_SOURCES org/*.java)
    file(GLOB_RECURSE C_HEADERS org/*.h)
    file(GLOB_RECURSE C_SOURCES org/*.c)

    jss_build_java()
    jss_build_includes()
    jss_build_c()
    jss_build_jar()
    jss_build_javadocs()
endmacro()

macro(jss_build_java)
    set(JNI_OUTPUTS "${TARGETS_OUTPUT_DIR}/finished_generate_java")

    add_custom_command(
        OUTPUT "${JNI_OUTPUTS}"
        COMMAND ${Java_JAVAC_EXECUTABLE} -classpath "${JAVAC_CLASSPATH}" -g -d ${CLASSES_OUTPUT_DIR} -sourcepath ${PROJECT_SOURCE_DIR} -h ${JNI_OUTPUT_DIR} ${JAVA_SOURCES}
        COMMAND touch "${JNI_OUTPUTS}"
        DEPENDS ${JAVA_SOURCES}
    )

    add_custom_target(
        generate_java ALL
        DEPENDS ${JNI_OUTPUTS}
    )
endmacro()

macro(jss_build_includes)
    foreach(C_HEADER ${C_HEADERS})
        file(COPY "${C_HEADER}" DESTINATION ${INCLUDE_OUTPUT_DIR})
    endforeach()

    add_custom_target(
        generate_includes
    )
endmacro()

macro(jss_build_c_file C_FILE C_OUTPUT C_TARGET C_DIR)
    add_custom_command(
        OUTPUT "${C_OUTPUT}"
        COMMAND ${CMAKE_C_COMPILER} ${JSS_C_FLAGS} -o ${C_OUTPUT} ${C_FILE}
        WORKING_DIRECTORY ${C_DIR}
        DEPENDS ${C_FILE}
        DEPENDS generate_java
        DEPENDS generate_includes
    )

    add_custom_target(
        "generate_c_${C_TARGET}"
        DEPENDS "${C_OUTPUT}"
    )
endmacro()

macro(jss_build_c)
    foreach(C_SOURCE ${C_SOURCES})
        if(NOT ${C_SOURCE} MATCHES "mozilla/jss/tests/")
            get_filename_component(C_TARGET ${C_SOURCE} NAME_WE)
            get_filename_component(C_DIR ${C_SOURCE} DIRECTORY)
            set(C_OUTPUT "${LIB_OUTPUT_DIR}/${C_TARGET}.o")

            jss_build_c_file("${C_SOURCE}" "${C_OUTPUT}" "${C_TARGET}" "${C_DIR}")
            list(APPEND C_OUTPUTS "${C_OUTPUT}")
        endif()
    endforeach()

    add_custom_target(
        generate_c ALL
        DEPENDS ${C_OUTPUTS}
    )

    add_custom_command(
        OUTPUT "${JSS_SO_PATH}"
        COMMAND ${CMAKE_C_COMPILER} -o ${JSS_SO_PATH} ${LIB_OUTPUT_DIR}/*.o ${JSS_LD_FLAGS}
        DEPENDS generate_c
    )

    add_custom_target(
        generate_so ALL
        DEPENDS ${JSS_SO_PATH}
    )
endmacro()

macro(jss_build_jar)
    # build/MANIFEST.MF is generated by JSSConfig.cmake -> jss_config_version
    add_custom_command(
        OUTPUT "${JSS_JAR_PATH}"
        COMMAND "${Java_JAR_EXECUTABLE}" cmf "${CMAKE_BINARY_DIR}/MANIFEST.MF" ${JSS_JAR_PATH} org/*
        WORKING_DIRECTORY "${CLASSES_OUTPUT_DIR}"
        DEPENDS generate_java
    )

    add_custom_target(
        generate_jar ALL
        DEPENDS "${JSS_JAR_PATH}"
    )
endmacro()

macro(jss_build_javadocs)
    set(JAVADOCS_OUTPUTS "${TARGETS_OUTPUT_DIR}/finished_generate_javadocs")

    add_custom_command(
        OUTPUT ${JAVADOCS_OUTPUTS}
        COMMAND "${Java_JAVADOC_EXECUTABLE}" -overview "${PROJECT_SOURCE_DIR}/tools/javadoc/overview.html" -windowtitle "${JSS_WINDOW_TITLE}" -notimestamp -breakiterator -classpath ${JAVAC_CLASSPATH} -sourcepath ${PROJECT_SOURCE_DIR} -d ${DOCS_OUTPUT_DIR} ${JSS_PACKAGES}
        COMMAND touch "${JAVADOCS_OUTPUTS}"
        DEPENDS ${JAVA_SOURCES}
    )

    add_custom_target(
        javadoc
        DEPENDS ${JAVADOCS_OUTPUTS}
    )
endmacro()
