# Provide docker in container for installing dependencies as root.
# https://github.com/Microsoft/azure-pipelines-agent/issues/2043#issuecomment-687983301
resources:
  containers:
  - container: fedora_latest
    image: fedora:latest
    options: '--name runner -v /usr/bin/docker:/usr/bin/docker:ro'
  - container: debian_testing
    image: debian:testing
    options: '--name runner -v /usr/bin/docker:/usr/bin/docker:ro'
  - container: ubuntu_rolling
    image: ubuntu:rolling
    options: '--name runner -v /usr/bin/docker:/usr/bin/docker:ro'

jobs:
- job: BuildTest
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      fedora_latest:
        image: fedora_latest
      debian_testing:
        image: debian_testing
      ubuntu_rolling:
        image: ubuntu_rolling
      # Disable CentOS due to missing dependencies
      # centos_7:
      #   image: centos:7
      # centos_8:
      #   image: centos:8
  container: $[variables['image']]
  steps:
  - script: |
      docker exec -u 0 runner dnf install -y dnf-plugins-core rpm-build
      docker exec -u 0 -w $BUILD_SOURCESDIRECTORY runner dnf builddep -y --spec jss.spec
    condition: or(startsWith(variables.image, 'fedora_'), startsWith(variables.image, 'centos_'))
    displayName: Install Fedora/CentOS dependencies

  - script: |
      docker exec -u 0 runner apt-get update
      docker exec -u 0 runner apt-get install -y \
          cmake zip unzip \
          g++ libnss3-dev libnss3-tools \
          openjdk-17-jdk libcommons-lang3-java libslf4j-java junit4
    condition: or(startsWith(variables.image, 'debian_'), startsWith(variables.image, 'ubuntu_'))
    displayName: Install Debian/Ubuntu dependencies

  - script: ./build.sh --with-tests
    condition: or(startsWith(variables.image, 'fedora_'), startsWith(variables.image, 'centos_'))
    displayName: Build JSS binaries, Javadoc, and run tests on Fedora/CentOS

  - script: ./build.sh --with-tests
    condition: or(startsWith(variables.image, 'debian_'), startsWith(variables.image, 'ubuntu_'))
    displayName: Build JSS binaries, Javadoc, and run tests on Debian/Unbuntu
    env:
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64

- job: SymbolTest
  pool:
    vmImage: ubuntu-latest
  steps:
  - script: |
      grep -iroh '^Java_org_mozilla[^(;]*' native/src/main/native/ | sort -u > /tmp/functions.txt
      cat /tmp/functions.txt
    displayName: Get JNI symbols in the code

  - script: |
      grep -iroh '^Java_org_mozilla[^(;]*' lib/ | sort -u > /tmp/version.txt
      cat /tmp/version.txt
    displayName: Get JNI symbols in the version script

  - script: |
      diff /tmp/functions.txt /tmp/version.txt || true
      comm -23 --check-order /tmp/functions.txt /tmp/version.txt > /tmp/diff.txt
      test ! -s /tmp/diff.txt
    displayName: Compare JNI symbols
